services:
  observability-app:
    container_name: observability-app
    build:
      dockerfile: src/main/docker/Dockerfile.jvm
      context: .
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/q/health"]
      retries: 3
      timeout: 7s
      interval: 3s
      start_interval: 2s
    volumes:
      - logs-volume:/tmp/observability-app/logs/
    ports:
      - 8080:8080
    depends_on:
      - persons-db
    environment:
      QUARKUS_DATASOURCE_USERNAME: persons
      QUARKUS_DATASOURCE_PASSWORD: persons
      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://persons-db:5432/persons
      QUARKUS_OTEL_EXPORTER_OTLP_TRACES_ENDPOINT: http://vector-default:4317

  persons-db:
    image: postgres:15
    container_name: persons-db
    environment:
      POSTGRES_USER: persons
      POSTGRES_PASSWORD: persons
      POSTGRES_DB: persons
    volumes:
      - ./db-init/persons-db.sql:/docker-entrypoint-initdb.d/1-init-tables.sql

  vector-default:
    container_name: vector-default
    image: timberio/vector:0.36.0-debian
    ports:
      - 8686:8686
    depends_on:
      observability-app:
        condition: service_healthy
      loki:
        condition: service_started
      tempo:
        condition: service_started
      mimir:
        condition: service_started
    environment:
      OBSERVABILITY_APP_PROMETHEUS_SCRAPPING_URL: http://observability-app:8080/q/metrics
      LOKI_SERVER_URL: http://loki:3100
      MIMIR_SERVER_URL: http://mimir:9009/api/v1/push
      POSTGRESQL_USERNAME: persons
      POSTGRESQL_PASSWORD: persons
    volumes:
      - ./vector/default/:/etc/vector/:ro
      - logs-volume:/var/log/observability-app/:ro


  vector-namespacing:
    container_name: vector-namespacing
    image: timberio/vector:0.36.0-debian
    entrypoint:
      - 'vector'
      - '--config-dir'
      - '/etc/vector'
    ports:
      - 8687:8686
    depends_on:
      observability-app:
        condition: service_healthy
      loki:
        condition: service_started
      tempo:
        condition: service_started
      mimir:
        condition: service_started
    environment:
      OBSERVABILITY_APP_PROMETHEUS_SCRAPPING_URL: http://observability-app:8080/q/metrics
      LOKI_SERVER_URL: http://loki:3100
      MIMIR_SERVER_URL: http://mimir:9009/api/v1/push
      POSTGRESQL_USERNAME: persons
      POSTGRESQL_PASSWORD: persons
    volumes:
      - ./vector/namespacing/:/etc/vector/:ro
      - logs-volume:/var/log/observability-app/:ro

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus-vector.yml'
    ports:
      - 9090:9090
    restart: unless-stopped
    volumes:
      - ./prometheus:/etc/prometheus
    depends_on:
      - vector-default

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    restart: unless-stopped
    depends_on:
      - prometheus
    environment:
      GF_SECURITY_ADMIN_USER: grafana
      GF_SECURITY_ADMIN_PASSWORD: grafana
    volumes:
      - ./grafana/provisioning/:/etc/grafana/provisioning/
      - ./grafana/dashboards-as-code/:/var/lib/grafana/dashboards

  loki:
    image: grafana/loki
    container_name: loki
    command:
      - '-config.file=/etc/loki/loki-config.yaml'
    ports:
      - 3100:3100
      - 9096:9096
    volumes:
      - ./grafana/loki:/etc/loki

  tempo:
    image: grafana/tempo
    container_name: tempo
    command:
      - '-config.file=/etc/tempo-config.yaml'
    volumes:
      - ./grafana/tempo/tempo-config.yaml:/etc/tempo-config.yaml
    ports:
      - 14268:14268  # jaeger ingest
      - 3200:3200   # tempo
      - 9095:9095 # tempo grpc
      - 4319:4319  # otlp grpc
      - 4320:4320  # otlp http
      - 9411:9411   # zipkin

  mimir:
    image: grafana/mimir
    container_name: mimir
    volumes:
      - ./grafana/mimir:/etc/mimir-config
    entrypoint:
      - /bin/mimir
      - -config.file=/etc/mimir-config/mimir-config.yaml
    ports:
      - 9009:9009

volumes:
  logs-volume: