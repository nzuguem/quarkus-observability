services:
  observability-app:
    container_name: observability-app
    build:
      dockerfile: src/main/docker/Dockerfile.jvm
      context: .
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/q/health"]
      retries: 3
      timeout: 7s
      interval: 1s
      start_interval: 1s
    volumes:
      - logs-volume:/tmp/observability-app/logs/
    ports:
      - 8080:8080

  vector-default:
    container_name: vector-default
    image: timberio/vector:0.36.0-debian
    ports:
      - 8686:8686
    depends_on:
      observability-app:
        condition: service_healthy
    environment:
      OBSERVABILITY_APP_PROMETHEUS_SCRAPPING_URL: http://observability-app:8080/q/metrics
    volumes:
      - ./vector/default/:/etc/vector/:ro
      - logs-volume:/var/log/observability-app/:ro


  vector-namespacing:
    container_name: vector-namespacing
    image: timberio/vector:0.36.0-debian
    entrypoint:
      - 'vector'
      - '--config-dir'
      - '/etc/vector'
    ports:
      - 8687:8686
    depends_on:
      observability-app:
        condition: service_healthy
    environment:
      OBSERVABILITY_APP_PROMETHEUS_SCRAPPING_URL: http://observability-app:8080/q/metrics
    volumes:
      - ./vector/namespacing/:/etc/vector/:ro
      - logs-volume:/var/log/observability-app/:ro

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    restart: unless-stopped
    volumes:
      - ./prometheus:/etc/prometheus
    depends_on:
      - vector-default

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    restart: unless-stopped
    depends_on:
      - prometheus
    environment:
      GF_SECURITY_ADMIN_USER: grafana
      GF_SECURITY_ADMIN_PASSWORD: grafana
    volumes:
      - ./grafana/provisioning/:/etc/grafana/provisioning/
      - ./grafana/dashboards-as-code/:/var/lib/grafana/dashboards

volumes:
  logs-volume: