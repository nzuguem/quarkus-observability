include:
  - path: compose.advanced.grafana.yml
  - path: compose.advanced.otel-collector.yml
  - path: compose.advanced.vector.yml

services:
  observability-app:
    container_name: observability-app
    build:
      dockerfile: src/main/docker/Dockerfile.jvm
      context: .
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/q/health" ]
      retries: 3
      timeout: 7s
      interval: 3s
      start_interval: 2s
    volumes:
      - logs-volume:/tmp/observability-app/logs/
    ports:
      - 8080:8080
    depends_on:
      - persons-db
    environment:
      QUARKUS_DATASOURCE_USERNAME: persons
      QUARKUS_DATASOURCE_PASSWORD: persons
      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://persons-db:5432/persons
      QUARKUS_OTEL_EXPORTER_OTLP_TRACES_ENDPOINT: ${QUARKUS_OTEL_EXPORTER_OTLP_TRACES_ENDPOINT}
    # docker compose -f compose.otel-collector.yml watch
    develop:
      watch:
        - path: target/quarkus-app
          action: rebuild

  persons-db:
    image: postgres:15
    container_name: persons-db
    environment:
      POSTGRES_USER: persons
      POSTGRES_PASSWORD: persons
      POSTGRES_DB: persons
    configs:
      - source: persons-db-init
        target: /docker-entrypoint-initdb.d/1-init-tables.sql

volumes:
  logs-volume:

configs:
  persons-db-init:
    file: ./db-init/persons-db.sql